Программа дисциплины "Информатика"; 09.03.04 "Программная инженерия".

МИНИСТЕРСТВО НАУКИ И ВЫСШЕГО ОБРАЗОВАНИЯ РОССИЙСКОЙ ФЕДЕРАЦИИ
Федеральное государственное автономное образовательное учреждение высшего образования
"Казанский (Приволжский) федеральный университет"
Высшая школа информационных технологий и интеллектуальных систем

подписано электронно-цифровой подписью

Программа дисциплины
Информатика
Направление подготовки: 09.03.04 - Программная инженерия
Профиль подготовки: Технологии разработки информационных систем
Квалификация выпускника: бакалавр
Форма обучения: очное
Язык обучения: русский
Год начала обучения по образовательной программе: 2019

Программа дисциплины "Информатика"; 09.03.04 "Программная инженерия".

Содержание
1. Перечень планируемых результатов обучения по дисциплинe (модулю), соотнесенных с планируемыми
результатами освоения ОПОП ВО
2. Место дисциплины (модуля) в структуре ОПОП ВО
3. Объем дисциплины (модуля) в зачетных единицах с указанием количества часов, выделенных на контактную
работу обучающихся с преподавателем (по видам учебных занятий) и на самостоятельную работу обучающихся
4. Содержание дисциплины (модуля), структурированное по темам (разделам) с указанием отведенного на них
количества академических часов и видов учебных занятий
4.1. Структура и тематический план контактной и самостоятельной работы по дисциплинe (модулю)
4.2. Содержание дисциплины (модуля)
5. Перечень учебно-методического обеспечения для самостоятельной работы обучающихся по дисциплинe
(модулю)
6. Фонд оценочных средств по дисциплинe (модулю)
7. Перечень литературы, необходимой для освоения дисциплины (модуля)
8. Перечень ресурсов информационно-телекоммуникационной сети "Интернет", необходимых для освоения
дисциплины (модуля)
9. Методические указания для обучающихся по освоению дисциплины (модуля)
10. Перечень информационных технологий, используемых при осуществлении образовательного процесса по
дисциплинe (модулю), включая перечень программного обеспечения и информационных справочных систем (при
необходимости)
11. Описание материально-технической базы, необходимой для осуществления образовательного процесса по
дисциплинe (модулю)
12. Средства адаптации преподавания дисциплины (модуля) к потребностям обучающихся инвалидов и лиц с
ограниченными возможностями здоровья
13. Приложение №1. Фонд оценочных средств
14. Приложение №2. Перечень литературы, необходимой для освоения дисциплины (модуля)
15. Приложение №3. Перечень информационных технологий, используемых для освоения дисциплины (модуля),
включая перечень программного обеспечения и информационных справочных систем

Страница 2 из 12.

Программа дисциплины "Информатика"; 09.03.04 "Программная инженерия".

Программу дисциплины разработал(а)(и) директор высшей школы информационных технологий и
интеллектуальных систем Абрамский М.М. (Высшая школа информационных технологий и интеллектуальных
систем, КФУ), Michael.Abramsky@kpfu.ru
1. Перечень планируемых результатов обучения по дисциплине (модулю), соотнесенных с планируемыми
результатами освоения ОПОП ВО
Обучающийся, освоивший дисциплину (модуль), должен обладать следующими компетенциями:
Шифр
компетенции

Расшифровка
приобретаемой компетенции

ОПК-3

Способен решать стандартные задачи профессиональной деятельности на
основе информационной и библиографической культуры с применением
информационно-коммуникационных технологий и с учетом основных
требований информационной безопасности

ОПК-5

Способен инсталлировать программное и аппаратное обеспечение для
информационных и автоматизированных систем

ОПК-6

Способен разрабатывать алгоритмы и программы, пригодные для
практического использования, применять основы информатики и
программирования к проектированию, конструированию и тестированию
программных продуктов

ОПК-7

Способен применять в практической деятельности основные концепции,
принципы, теории и факты, связанные с информатикой

Обучающийся, освоивший дисциплину (модуль):
Должен знать:
- основные парадигмы программирования (процедурная, объектно-ориентированная, функциональная),
- основные инструменты, реализующие в себе концепцию этих парадигм
- основные структуры данных и структуры управления,
- базовые алгоритмы обработки данных
- базовые принципы проектирования информационных систем.
Должен уметь:
- алгоритмизировать задачи общего характера;
- программировать на процедурном языке и на объектно-ориентированном языке программирования;
- проектировать информационные системы на основе объектно-ориентированного подхода;
- создавать веб-приложения с базовым функционалом.
Должен владеть:
- методами алгоритмизации задач общего характера;
- технологиями построения информационных систем на основе объектно-ориентированного подхода;
- способами измерения эффективности алгоритмов и умением писать такие алгоритмы.
Должен демонстрировать способность и готовность:
- Знать основные парадигмы программирования (процедурная, объектно-ориентированная, функциональная),
основные структуры данных и структуры управления, базовые понятия баз данных и веб-технологий и владеть
основными инструментами, реализующими в себе концепцию этих парадигм
- Уметь проектировать и разрабатывать программные системы,
- Выбирать средства программирования, структуры данных, паттерны проектирования, необходимые для
оптимального решения поставленной задачи,
- Понимать и анализировать программный код.
- Применять полученные знания в профессиональной деятельности.
2. Место дисциплины (модуля) в структуре ОПОП ВО
Данная дисциплина (модуль) включена в раздел "Б1.О.05 Дисциплины (модули)" основной профессиональной
образовательной программы 09.03.04 "Программная инженерия (Технологии разработки информационных
систем)" и относится к обязательным дисциплинам.
Страница 3 из 12.

Программа дисциплины "Информатика"; 09.03.04 "Программная инженерия".

Осваивается на 1, 2 курсах в 1, 2, 3, 4 семестрах.
3. Объем дисциплины (модуля) в зачетных единицах с указанием количества часов, выделенных на
контактную работу обучающихся с преподавателем (по видам учебных занятий) и на самостоятельную
работу обучающихся
Общая трудоемкость дисциплины составляет 21 зачетных(ые) единиц(ы) на 756 часа(ов).
Контактная работа - 360 часа(ов), в том числе лекции - 72 часа(ов), практические занятия - 72 часа(ов),
лабораторные работы - 216 часа(ов), контроль самостоятельной работы - 0 часа(ов).
Самостоятельная работа - 297 часа(ов).
Контроль (зачёт / экзамен) - 99 часа(ов).
Форма промежуточного контроля дисциплины: экзамен в 1 семестре; экзамен во 2 семестре; зачет в 3 семестре;
экзамен в 4 семестре.
4. Содержание дисциплины (модуля), структурированное по темам (разделам) с указанием отведенного на
них количества академических часов и видов учебных занятий
4.1 Структура и тематический план контактной и самостоятельной работы по дисциплинe (модулю)

N

Разделы дисциплины /
модуля

Тема 1. Введение в
алгоритмизацию.
Тема 2. Введение в язык Java и
2. среду JDK. Типы данных и
операции с ними.
Тема 3. Управляющие операторы
3.
языка.
Тема 4. Базовые алгоритмы
4.
обработки данных.
5. Тема 5. Массивы.
6. Тема 6. Символы и строки.
Тема 7.
Объектно-ориентированный
7.
подход (ООП). Пакеты.
Интерфейсы.
8. Тема 8. Исключения.
9. Тема 9. Generics.
10. Тема 10. Коллекции.
Тема 12. Ввод и вывод.
12.
Многопоточность.
Тема 13. Основы разработки
13.
веб-приложений.
Тема 14.
14. Событийно-ориентированное
программирование.
Тема 15. Работа с базами данных с
15.
помощью JDBC.
16. Тема 16. Работа с сетью.
17. Тема 17. Рефлексия.
Тема 18. Паттерны
18.
проектирования.
Тема 19. Фреймворк Spring.
Инъекция зависимостей.
19. Аспектно-ориентированное
программирование.
Веб-фреймворк Spring MVC.
1.

Страница 4 из 12.

Виды и часы
контактной работы,
их трудоемкость
Самостоятельная
Семестр
(в часах)
работа
Практические Лабораторные
Лекции
занятия
работы
1

2

0

4

8

1

2

0

8

8

1

2

0

8

8

1

2

0

8

10

1
1

2
2

0
0

12
10

16
8

1

6

0

22

32

2
2
2

2
2
6

0
0
0

4
8
32

4
8
32

2

8

0

28

19

3

6

0

18

26

3

4

0

12

32

3

2

0

10

32

3
3

4
2

0
0

14
18

18
18

4

4

10

0

4

4

6

30

0

8

Программа дисциплины "Информатика"; 09.03.04 "Программная инженерия".

Разделы дисциплины /
модуля

N

Тема 20. ORM-модель баз данных.
20. Фреймворк Hibernate. Spring Data
JPA. Тестирование приложений.
Итого

Виды и часы
контактной работы,
их трудоемкость
Самостоятельная
Семестр
(в часах)
работа
Практические Лабораторные
Лекции
занятия
работы
4

8

32

0

6

72

72

216

297

4.2 Содержание дисциплины (модуля)
Тема 1. Введение в алгоритмизацию.
Структура компьютера по фон Нейману. Понятие алгоритма.
Языки низкого и высокого уровня. Компилируемые и интерпретируемые языки (примеры, различия). JVM. Этапы
компилирования и исполнения программ на Java.
Типы данных в Java и их свойства. Примитивные типы данных Java (int, short, long, byte, double, float, boolean,
char), различия между примитивными и ссылочными типами данных. Приведение типов. Арифметические и
логические операции (+,-,*,/,%, &&, ||, !). Преобразование типов в при арифметических операциях. Сужение при
преобразовании типов.
Тема 2. Введение в язык Java и среду JDK. Типы данных и операции с ними.
Структура класса, метод main. Компиляция и исполнение программ. javac и java
Примитивные типы данных Java (int, double, float, boolean, char), различия между примитивными и ссылочными
типами данных. Приведение типов. Сужением типа данных.
Арифметические и логические операции (+,-,*,/,%, &&, ||, !).
Тема 3. Управляющие операторы языка.
Обзор условных и циклических операторов в языке Java. Условные и циклические операторы языка. Условные
операторы if, switch case, (P ? v1 : v2 ). Циклические операторы while, do while, циклы for и for each, операторы
break и continue. Обзор задач, решаемых через управляющие конструкции.
Тема 4. Базовые алгоритмы обработки данных.
Подходы к построению алгоритмов. Проектирование алгоритмов TOP-DOWN и BOTTOM-UP. Способы задания
алгоритмов. Конечные детерминированные автоматы. Регулярные и контекстно свободные грамматики.
Моделирование автоматов и машин Тьюринга на современных языках программирования. Алгоритмы работы
цифр числа.
Тема 5. Массивы.
Необходимость массивов. Хранение в памяти. Одномерные массивы объявление ссылки и выделение памяти.
Обращение к элементу массива. Как пройти по всем элементам массива. Многомерные массивы - объявление,
способ пройти по всем элементам. Ступенчатые массивы. Алгоритмы обработки массивов. Сортировки массивов.
Тема 6. Символы и строки.
Строки. Тип char, номер символа в ASCII. Юникод. Класс String. Объявление, использование (ввод-вывод,
конкатенация, методы charAt и length). Базовый ввод данных. Регулярные выражения. Жадные, ленивые
регулярные выражения. Методы класса String. Решение задач на строки, реализация строковых методов,
имитирующих класс String.
Тема 7. Объектно-ориентированный подход (ООП). Пакеты. Интерфейсы.
Принципы ООП - абстракция, 3 кита ООП (инкапсуляция, наследование, полиморфизм), классы и объекты.
Методы. Объявление и вызов. Параметры. Перегрузка.
Классы. Объявление. Члены класса (атрибуты, методы), оператор this, конструктор класса, модификаторы
(public, private, protected, по умолчанию, static, abstract).
Наследование и полиморфизм. Восходящее преобразование и позднее связывание.
Объекты. Создание объекта, оператор new. Пакеты. Необходимость. Принципы построения. Интерфейсы и
абстрактные классы. Абстрактные методы и абстрактные классы. Интерфейсы, их отличие от абстрактных
классов. Интерфейсы и множественное наследование. Интерфейсы как средство адаптации. Клонирование и
его реализация. Основные сведения о перечисляемых типах (enums).
Тема 8. Исключения.
Объекты-исключения. Перехват и обработка исключений. Спецификация исключений. Трассировка стека.
Повторное возбуждение исключений. Цепочки исключений.
Стандартные исключения java и их классификация. Завершение обработки с помощью finally и его
использование. Ограничения при использовании исключений. Исключения и конструкторы.
Тема 9. Generics.
Страница 5 из 12.

Программа дисциплины "Информатика"; 09.03.04 "Программная инженерия".

Параметризованные типы (Generics). История и цели внедрения параметризованных типов в Java. Простая
параметризация. Параметризованные интерфейсы. Параметризованные методы. Параметризация и вложенные
классы. Ограничения параметризации. Сосуществование параметризованного и непараметризованного кода.
Массивы параметризованного типа. Метасимволы. Преобразования типов и предупреждения.
Тема 10. Коллекции.
Коллекции объектов. Параметризованные и типизированные контейнеры. Основные понятия. Списки,
итераторы, множества, отображения. Collection и Iterator. Foreach и итераторы. Хеширование. Особенности
использования hashCode() и equals().
Линейные и древовидные структуры данных. Типы данных линейной структуры с последовательным доступом к
данным: стек, очереди, дек. Связанные линейные списки.
Алгоритмы обработки структур данных. Сортировка. Алгоритмы сортировки: выбором, обменом, вставками,
быстрая, карманная, поразрядовая, пирамидальная. Слияние сортированных последовательностей. Поиск:
Последовательный поиск, Бинарный поиск.
Деревья. Способы отображения деревьев. Двоичные (бинарные) деревья. Деревья двоичного поиска. Операции
с двоичными деревьями. Сбалансированные деревья. Основные определения. Графы. Основные понятия и
определения. Способы задания графов. Алгоритмы на графах. Поиск в глубину. Поиск в ширину.
Тема 12. Ввод и вывод. Многопоточность.
История развития средств ввода/вывода в Java. Новый ввод/вывод (nio). ByteBuffer. Вопросы
производительности. Сжатие данных. JAR-файлы. Сериализация, десериализация и их
разновидности.Виртуальная параллельность. Thread. Перехват управления. Реализация потока через Thread и
Runnable. Жизненный цикл потока. Методы run, start, sleep, join.
Передача объектов в поток. Синхронизация и ее проблемы (наличие, отсутствие). Способы синхронизации.
Дедлок. Потокобезопасностью
Модель Producer ? Consumer. Методы wait, notify, notifyAll. Модификатор volatile.
Concurrent API.
Тема 13. Основы разработки веб-приложений.
Примитивная модель сетевого взаимодействия. Клиент. Сервер. OSI-модель. Сетевой протокол. Протоколы
уровней OSI-модули.
HTTP-протокол. URL, URI. Запрос (структура), заголовки запроса, стартовая строка, http-методы. POST и GET
запросы. Параметры запросов. Response (структура). Заголовки. Код ответа. MIME-типы.
HTML, HTML-формы, XML (DTD, XML Schema), JSON. Статические и динамические сайты. Динамическая
генерация. MVC-модель.
Порты. Веб-сервер. Примеры веб-серверов. CGI. Сервлет (структура, его методы). Жизненный цикл сервлета.
HTTP-сервлет. URL-mapping (синтаксис шаблонов). Сборка. Минусы ручной сборки. Декларативный и
императивный подход к сборке. Ant. Target, task. Maven. Pom.xml. Зависимость. Деплой. Артефакт. Механизм
плагинов. Жизненный цикл сборки. Архетипы. Необходимая структура приложения для Maven.
Понятие Stateless в HTTP. Сессия. HttpSession его принцип работы и методы. Авторизация пользователя через
сессию. Редирект. Cookie (устройство, атрибуты, как работают механизмы cookie). Реализация сессии через
cookie. ServletContext.
Шаблонизаторы. JSP. Принцип работы. Недостатки шаблонизаторов. Другие примеры шаблонизаторов: JSTL,
Freemarker, Velocity.
Тема 14. Событийно-ориентированное программирование.
UI. История развития UI и GUI. Графические оболочки ОС. Окно (форма). Виджеты (компоненты), Layout.
События. Listener. Событийно-ориентированный подход в программировании. Примеры графических элементов в
библиотеке Swing. Принцип разработки приложений на swing. Анонимный класс для Listener.
Браузерные приложения. Их преимущество над Desktop-ными. События в браузере. ECMAScript. DOM. BOM. JS.
Как происходит работа с компонентами страницы с помощью DOM.
Прототипирование в JS. Использование функций как объекта в JS. AJAX. Необходимость и преимущества.
Примеры использования AJAX. JS библиотеки.
Тема 15. Работа с базами данных с помощью JDBC.
Модель данных. Реляционная модель.Таблица, строка, столбец. Primary Key, Foreign Key.
Избыточность и целостность. Нормальные формы.
СУБД, виды СУБД.
Язык SQL. Запросы. CRUD-операции. JDBC как технология работы с БД в java. Драйвер. JDBC. Connection,
Statement, ResultSet. Введение Object Relation Mapping (концепция и способ реализации)
Тема 16. Работа с сетью.
Java.net. InetAddress, URL, URLConnection и их методы.
TCP и UDP, плюсы и минусы. Понятие сокета. Принцип работы TCP. Socket, ServerSocket.
UDP. Принцип работы. DatagramSocket, DatagramPacket.

Страница 6 из 12.

Программа дисциплины "Информатика"; 09.03.04 "Программная инженерия".

Применение многопоточности как средства обработки нескольких клиентов. Подход Java NIO к организации
ввода/вывода. Каналы и буферы. Селекторы как альтернатива. Принцип работы селекторов.
Тема 17. Рефлексия.
Аннотации. Зачем нужны. Создание собственных аннотаций. Аннотации Retention и Target.
Рефлексия. Понятие рефлексии. Классы Class, Method, Annotation, Type и их методы. Как получить class по
объекту, классу и строке. Доступ к приватным полям через рефлексию. Вызов метода через рефлексию.
Сигнатура метода (общее определение и способ задания через рефлексию).
Тема 18. Паттерны проектирования.
Понятие паттерна. Поведенческие паттерны проектирования: Интерпретатор (Interpreter), Итератор (Iterator),
Команда (Command), Наблюдатель (Observer), Посетитель (Visitor), Посредник (Mediator), Состояние (State),
Стратегия (Strategy), Хранитель (Memento), Цепочка обязанностей (Chain of Responsibility), Шаблонный метод
(Template Method). Порождающие паттерны проектирования: Абстрактная фабрика (Abstract Factory), Одиночка
(Singleton), Прототип (Prototype), Строитель (Builder), Фабричный метод (Factory Method). Структурные паттерны
проектирования: Адаптер (Adapter), Декоратор (Decorator), Заместитель (Proxy), Компоновщик (Composite), Мост
(Bridge), Приспособленец (Flyweight), Фасад (Faсade).
Тема 19. Фреймворк Spring. Инъекция зависимостей. Аспектно-ориентированное программирование.
Веб-фреймворк Spring MVC.
Что такое Spring. Понятие сильной связанности. Инъекция зависимостей и Inversion of Control. Конфигурация
Spring, основные xml-теги и аннотации. AOP. Необходимость. Spring AOP - назначение. Основные понятия:
Advice, JoinPoint, PointCut, Proxy-объект. Spring и AspectJ. Реализация через аннотации и через xml. Spring MVC.
Структура простого приложения. Основные особенности и возможности Spring MVC. Архитектура MVC.
Контроллер. Модель. Валидация значений.
Тема 20. ORM-модель баз данных. Фреймворк Hibernate. Spring Data JPA. Тестирование приложений.
Модель ORM. Преимущества. Технология JPA. Hibernate. Архитектура фреймворка. Сущности. Запросы в
Hibernate. Язык HQL. Spring Data JPA. Назначение тестирования. Testcase. Основные unit-тестирования
приложений. Жизненный цикл запуска теста. Проверки. Исключения. Библиотеки тестирования JUnit3 и JUnit4.
Mock-тестирование - назначение. Библиотека Mockito.
5. Перечень учебно-методического обеспечения для самостоятельной работы обучающихся по
дисциплинe (модулю)
Самостоятельная работа обучающихся выполняется по заданию и при методическом руководстве преподавателя,
но без его непосредственного участия. Самостоятельная работа подразделяется на самостоятельную работу на
аудиторных занятиях и на внеаудиторную самостоятельную работу. Самостоятельная работа обучающихся
включает как полностью самостоятельное освоение отдельных тем (разделов) дисциплины, так и проработку тем
(разделов), осваиваемых во время аудиторной работы. Во время самостоятельной работы обучающиеся читают и
конспектируют учебную, научную и справочную литературу, выполняют задания, направленные на закрепление
знаний и отработку умений и навыков, готовятся к текущему и промежуточному контролю по дисциплине.
Организация самостоятельной работы обучающихся регламентируется нормативными документами,
учебно-методической литературой и электронными образовательными ресурсами, включая:
Порядок организации и осуществления образовательной деятельности по образовательным программам высшего
образования - программам бакалавриата, программам специалитета, программам магистратуры (утвержден
приказом Министерства образования и науки Российской Федерации от 5 апреля 2017 года №301)
Письмо Министерства образования Российской Федерации №14-55-996ин/15 от 27 ноября 2002 г. "Об
активизации самостоятельной работы студентов высших учебных заведений"
Устав федерального государственного автономного образовательного учреждения "Казанский (Приволжский)
федеральный университет"
Правила внутреннего распорядка федерального государственного автономного образовательного учреждения
высшего профессионального образования "Казанский (Приволжский) федеральный университет"
Локальные нормативные акты Казанского (Приволжского) федерального университета
6. Фонд оценочных средств по дисциплинe (модулю)
Фонд оценочных средств по дисциплине (модулю) включает оценочные материалы, направленные на проверку
освоения компетенций, в том числе знаний, умений и навыков. Фонд оценочных средств включает оценочные
средства текущего контроля и оценочные средства промежуточной аттестации.
В фонде оценочных средств содержится следующая информация:
- соответствие компетенций планируемым результатам обучения по дисциплине (модулю);
- критерии оценивания сформированности компетенций;
- механизм формирования оценки по дисциплине (модулю);
- описание порядка применения и процедуры оценивания для каждого оценочного средства;
- критерии оценивания для каждого оценочного средства;
Страница 7 из 12.

Программа дисциплины "Информатика"; 09.03.04 "Программная инженерия".

- содержание оценочных средств, включая требования, предъявляемые к действиям обучающихся,
демонстрируемым результатам, задания различных типов.
Фонд оценочных средств по дисциплине находится в Приложении 1 к программе дисциплины (модулю).

7. Перечень литературы, необходимой для освоения дисциплины (модуля)
Освоение дисциплины (модуля) предполагает изучение основной и дополнительной учебной литературы.
Литература может быть доступна обучающимся в одном из двух вариантов (либо в обоих из них):
- в электронном виде - через электронные библиотечные системы на основании заключенных КФУ договоров с
правообладателями;
- в печатном виде - в Научной библиотеке им. Н.И. Лобачевского. Обучающиеся получают учебную литературу на
абонементе по читательским билетам в соответствии с правилами пользования Научной библиотекой.
Электронные издания доступны дистанционно из любой точки при введении обучающимся своего логина и пароля
от личного кабинета в системе "Электронный университет". При использовании печатных изданий библиотечный
фонд должен быть укомплектован ими из расчета не менее 0,5 экземпляра (для обучающихся по ФГОС 3++ - не
менее 0,25 экземпляра) каждого из изданий основной литературы и не менее 0,25 экземпляра дополнительной
литературы на каждого обучающегося из числа лиц, одновременно осваивающих данную дисциплину.
Перечень основной и дополнительной учебной литературы, необходимой для освоения дисциплины (модуля),
находится в Приложении 2 к рабочей программе дисциплины. Он подлежит обновлению при изменении условий
договоров КФУ с правообладателями электронных изданий и при изменении комплектования фондов Научной
библиотеки КФУ.

8. Перечень ресурсов информационно-телекоммуникационной сети "Интернет", необходимых для
освоения дисциплины (модуля)
Online-площадка для изучения языков программирования - https://www.codecademy.com/
Образовательный справочник технических вопросов по программированию и информатике http://www.quizful.net/test
Руководства по изучению Java и связанных технологий и фреймворков - http://tutorials.jenkov.com/
Сайт фреймворка Spring - статьи и уроки - http://spring-projects.ru/
Статьи и уроки по разработке на языке Java - http://javaxblog.ru/
9. Методические указания для обучающихся по освоению дисциплины (модуля)
Вид работ
лекции

Методические рекомендации
1. Прорабатывать лекционный материал до ближайшего практического занятия.
2. В случае возникновения вопросов искать дополнительный материал в дополнительных
источниках и сети интернет.
3. Задавать вопросы на лекциях в момент их возникновения
4. Запускать программный код, приведенный преподавателем в презентации.
5. Лекции по данному курсу могут быть заменены онлайн-лекциями

практические 1. Регулярно загружать результаты классной работы на ресурс github.com или bitbucket.org
занятия
2. Соблюдать в программном коде Code Conventions языка программирования
3. Акцентировать внимание именно на способности писать программный код в момент решения
задачи.
4. Активно задавать вопросы преподавателю в момент их возникновения.
лабораторные 1. Активно стремиться к выполнению задания в рамках занятия, не оставляя его на дом.
работы
2. Активно участвовать в обсуждении возникающих проблем, предлагаемых идей, способов,
решений.
3. Регулярно запускать текущую версию программы/приложения для проверки ее
работоспособности.
4. Регулярно показывать текущий прогресс преподавателю.
самостоятельная
работа

Страница 8 из 12.

1. Ознакомиться с основной и дополнительной учебной литературой
2. Обсуждать проблемные места и сложные темы с одногруппниками.
3. По мере возникновения вопросов оперативно оформлять письмо с ними преподавателю, при
этом в письме описывая вопрос, прикладывая программный код и скриншот возникающей
ошибки.

Программа дисциплины "Информатика"; 09.03.04 "Программная инженерия".

Вид работ

Методические рекомендации

экзамен

1. Сделать акцент на общих понятия информатики минуя технологические особенности именно
языка.
2. При подготовке воспользоваться дополнительными ресурсами на платформе stepic.org,
lectorium.tv по информатике.
3. Ознакомиться с перечнем вопросов экзамена, по мере возникновения вопросов
адресовывать их преподавателю по электронной почте.

зачет

1. Сделать акцент на общих понятия информатики минуя технологические особенности именно
языка.
2. Воспользоваться дополнительными ресурсами на платформе stepic.org, lectorium.tv по
информатике.
3. Ознакомиться с перечнем вопросов зачета, по мере возникновения вопросов адресовывать
их преподавателю по электронной почте.

10. Перечень информационных технологий, используемых при осуществлении образовательного
процесса по дисциплинe (модулю), включая перечень программного обеспечения и информационных
справочных систем (при необходимости)
Перечень информационных технологий, используемых при осуществлении образовательного процесса по
дисциплине (модулю), включая перечень программного обеспечения и информационных справочных систем,
представлен в Приложении 3 к рабочей программе дисциплины (модуля).
11. Описание материально-технической базы, необходимой для осуществления образовательного
процесса по дисциплинe (модулю)
Материально-техническое обеспечение образовательного процесса по дисциплине (модулю) включает в себя
следующие компоненты:
Помещения для самостоятельной работы обучающихся, укомплектованные специализированной мебелью (столы и
стулья) и оснащенные компьютерной техникой с возможностью подключения к сети "Интернет" и обеспечением
доступа в электронную информационно-образовательную среду КФУ.
Учебные аудитории для контактной работы с преподавателем, укомплектованные специализированной мебелью
(столы и стулья).
Компьютер и принтер для распечатки раздаточных материалов.
Мультимедийная аудитория.
Компьютерный класс.
12. Средства адаптации преподавания дисциплины к потребностям обучающихся инвалидов и лиц с
ограниченными возможностями здоровья
При необходимости в образовательном процессе применяются следующие методы и технологии, облегчающие
восприятие информации обучающимися инвалидами и лицами с ограниченными возможностями здоровья:
- создание текстовой версии любого нетекстового контента для его возможного преобразования в
альтернативные формы, удобные для различных пользователей;
- создание контента, который можно представить в различных видах без потери данных или структуры,
предусмотреть возможность масштабирования текста и изображений без потери качества, предусмотреть
доступность управления контентом с клавиатуры;
- создание возможностей для обучающихся воспринимать одну и ту же информацию из разных источников например, так, чтобы лица с нарушениями слуха получали информацию визуально, с нарушениями зрения аудиально;
- применение программных средств, обеспечивающих возможность освоения навыков и умений, формируемых
дисциплиной, за счёт альтернативных способов, в том числе виртуальных лабораторий и симуляционных
технологий;
- применение дистанционных образовательных технологий для передачи информации, организации различных
форм интерактивной контактной работы обучающегося с преподавателем, в том числе вебинаров, которые могут
быть использованы для проведения виртуальных лекций с возможностью взаимодействия всех участников
дистанционного обучения, проведения семинаров, выступления с докладами и защиты выполненных работ,
проведения тренингов, организации коллективной работы;
- применение дистанционных образовательных технологий для организации форм текущего и промежуточного
контроля;
- увеличение продолжительности сдачи обучающимся инвалидом или лицом с ограниченными возможностями
здоровья форм промежуточной аттестации по отношению к установленной продолжительности их сдачи:
- продолжительности сдачи зачёта или экзамена, проводимого в письменной форме, - не более чем на 90 минут;

Страница 9 из 12.

Программа дисциплины "Информатика"; 09.03.04 "Программная инженерия".

- продолжительности подготовки обучающегося к ответу на зачёте или экзамене, проводимом в устной форме, - не
более чем на 20 минут;
- продолжительности выступления обучающегося при защите курсовой работы - не более чем на 15 минут.
Программа составлена в соответствии с требованиями ФГОС ВО и учебным планом по направлению 09.03.04
"Программная инженерия" и профилю подготовки "Технологии разработки информационных систем".

Страница 10 из 12.

Программа дисциплины "Информатика"; 09.03.04 "Программная инженерия".

Приложение 2
к рабочей программе дисциплины (модуля)
Б1.О.05 Информатика
Перечень литературы, необходимой для освоения дисциплины (модуля)
Направление подготовки: 09.03.04 - Программная инженерия
Профиль подготовки: Технологии разработки информационных систем
Квалификация выпускника: бакалавр
Форма обучения: очное
Язык обучения: русский
Год начала обучения по образовательной программе: 2019
Основная литература:
1. Васюткина И.А., Технология разработки объектно-ориентированных программ на JAVA : учебно - методическое
пособие / Васюткина И.А. - Новосибирск : Издательство Новосибирского государственного технического
университета, 2012. - 152 с. - ISBN 978-5-7782-1973-1 - Текст : электронный // ЭБС 'Консультант студента' : [сайт]. URL : http://www.studentlibrary.ru/book/ISBN9785778219731.html (дата обращения: 17.03.2020). - Режим доступа : по
подписке.
2. Информатика : учебное пособие / под ред. Б.Е. Одинцова, А.Н. Романова. - 2-е изд., перераб. и доп. - Москва :
Вузовский учебник ; ИНФРА-М, 2012. - 410 с. - ISBN 978-5-9558-0230-5 (Вузовский учебник); ISBN
978-5-16-005108-6 (ИНФРА-М). - Текст : электронный. - URL: https://znanium.com/catalog/product/263735 (дата
обращения: 17.03.2020). - Режим доступа : по подписке.
3. Машнин, Т. С. Современные Java-технологии на практике: практическое руководство / Машнин Т.С. Санкт-Петербург: БХВ-Петербург, 2010. - 560 с.ISBN 978-5-9775-0561-1. - Текст : электронный. - URL:
https://znanium.com/catalog/product/351236 (дата обращения: 17.03.2020). - Режим доступа : по подписке.

Дополнительная литература:
1. Федотова, Е. Л. Информатика: курс лекций: учебное пособие / Е.Л. Федотова, А.А. Федотов. - Москва : ИД
ФОРУМ: ИНФРА-М, 2011. - 480 с.: ил.; . - (Высшее образование). ISBN 978-5-8199-0448-0. - Текст : электронный. URL: https://znanium.com/catalog/product/204273 (дата обращения: 17.03.2020). - Режим доступа : по подписке.
2. Колдаев, В. Д. Численные методы и программирование : учебное пособие / В.Д. Колдаев ; под ред. проф. Л.Г.
Гагариной. - Москва : ИД 'ФОРУМ' : ИНФРА-М, 2018. - 336 с. - (Среднее профессиональное образование). ISBN 978-5-16-101025-9. - Текст : электронный. - URL: https://znanium.com/catalog/product/672966 (дата
обращения: 17.03.2020). - Режим доступа : по подписке.

Страница 11 из 12.

Программа дисциплины "Информатика"; 09.03.04 "Программная инженерия".

Приложение 3
к рабочей программе дисциплины (модуля)
Б1.О.05 Информатика
Перечень информационных технологий, используемых для освоения дисциплины (модуля), включая
перечень программного обеспечения и информационных справочных систем
Направление подготовки: 09.03.04 - Программная инженерия
Профиль подготовки: Технологии разработки информационных систем
Квалификация выпускника: бакалавр
Форма обучения: очное
Язык обучения: русский
Год начала обучения по образовательной программе: 2019
Освоение дисциплины (модуля) предполагает использование следующего программного обеспечения и
информационно-справочных систем:
Операционная система Microsoft Windows 7 Профессиональная или Windows XP (Volume License)
Пакет офисного программного обеспечения Microsoft Office 365 или Microsoft Office Professional plus 2010
Браузер Mozilla Firefox
Браузер Google Chrome
Adobe Reader XI или Adobe Acrobat Reader DC
Kaspersky Endpoint Security для Windows
Учебно-методическая литература для данной дисциплины имеется в наличии в электронно-библиотечной системе
"ZNANIUM.COM", доступ к которой предоставлен обучающимся. ЭБС "ZNANIUM.COM" содержит произведения
крупнейших российских учёных, руководителей государственных органов, преподавателей ведущих вузов страны,
высококвалифицированных специалистов в различных сферах бизнеса. Фонд библиотеки сформирован с учетом
всех изменений образовательных стандартов и включает учебники, учебные пособия, учебно-методические
комплексы, монографии, авторефераты, диссертации, энциклопедии, словари и справочники,
законодательно-нормативные документы, специальные периодические издания и издания, выпускаемые
издательствами вузов. В настоящее время ЭБС ZNANIUM.COM соответствует всем требованиям федеральных
государственных образовательных стандартов высшего образования (ФГОС ВО) нового поколения.

Страница 12 из 12.

